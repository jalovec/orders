{% extends 'base.html.twig' %}

{% block title %}Orders{% endblock %}

{% block body %}


    <style>
        .example-wrapper {
            margin: 1em auto;
            max-width: 800px;
            width: 95%;
            font: 18px/1.5 sans-serif;
        }

        .example-wrapper code {
            background: #F5F5F5;
            padding: 2px 6px;
        }
    </style>
    <center>
        <TABLE width="70%" border="1">
            <tr>
                <td colspan="5"><font face='Arial' size='5'>Orders</font></td>
                <td align="right"><font face='Arial' size='2'><a href="/logout">logout</a></font></td>
            </tr>

            <tr>
                <th>ID</th>
                <th>Customer Name</th>
                <th>Status</th>
                <th>Order date</th>
                <th>Total price</th>
                <th></th>
            </tr>
            <tr>
                <td><INPUT type="number" name="id" id="id" value="{{ app.request.query.get('id') }}" style="width:30px" onchange="sendValueToRoute()"></td>
                <td><INPUT type="text" name="customerName" value="{{ app.request.query.get('customerName') }}" id="customerName" onchange="sendValueToRoute()"></td>
                <td>
                    <SELECT name="status" id="status" onChange="sendValueToRoute()">
                        <OPTION value=""></OPTION>
                        {% for status in statuses %}
                            <OPTION value="{{ status.value }}" {% if status.value == app.request.query.get('status') %}SELECTED{% endif %}>
                                {{ status.value }}
                            </OPTION>
                        {% endfor %}
                    </SELECT>
                </td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td></td>
            </tr>
            {% for order in orders %}
                <tr>
                    <td>{{ order.id }}</td>
                    <td>{{ order.customerName }}</td>
                    <td>{{ order.status.value }}</td>
                    <td>{{ order.orderDate|date("d. m. Y H:i:s") }}</td>
                    <td>{{ order.totalPrice }} CZK
                    </td>
                    <td>
                        <a href="/orders/update/{{ order.id }}">EDIT</a>
                        <a href="#" onClick="JavaScript:deleteOrder({{ order.id }});">DELETE</a>
                    </td>
                </tr>
            {% endfor %}
        </TABLE>
        <br><br>
        <TABLE width="70%" border="0">
            <tr>
                <td width="100%" colspan="6"><font face='Arial' size='5'>
                        <center><a href="/orders/create">Přidej objednávku</a></center>
                    </font></td>
            </tr>
        </TABLE>
        {% set queryParams = [] %}

        {# Check for each parameter directly in the query parameters #}
        {% if app.request.query.get('id') is not null %}
            {% set queryParams = queryParams|merge(['id=' ~ app.request.query.get('id')]) %}
        {% endif %}
        {% if app.request.query.get('customerName') is not null %}
            {% set queryParams = queryParams|merge(['customerName=' ~ app.request.query.get('customerName')]) %}
        {% endif %}
        {% if app.request.query.get('status') is not null %}
            {% set queryParams = queryParams|merge(['status=' ~ app.request.query.get('status')]) %}
        {% endif %}

        {# Construct the query string #}
        {% if queryParams|length > 0 %}
            {% set queryString = '?' ~ queryParams|join('&') %}
        {% else %}
            {% set queryString = '' %}
        {% endif %}
        <a href="/orders/export/csv{{ queryString }}">Export to CSV</a>
        <a href="/orders/export/json{{ queryString }}">Export to JSON</a>
    </center>

    <script>
        function deleteOrder(orderId) {
            if (confirm('Are you sure you want to delete this order?')) {
                fetch(`/orders/${orderId}`, {
                    method: 'DELETE',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest',
                    }
                }).then(response => {
                    if (response.ok) {
                        alert('Order deleted successfully');
                        window.location.href = '/orders';
                    } else {
                        alert('Failed to delete the order');
                    }
                }).catch(error => console.error('Error:', error));
            }
        }

        function sendValueToRoute() {
            // Get the values from each input/select field
            const idValue = document.getElementById("id").value;
            const customerName = document.getElementById("customerName").value;
            const status = document.getElementById("status").value;

            window.location.href = `/orders?id=${encodeURIComponent(idValue)}&customerName=${encodeURIComponent(customerName)}&status=${encodeURIComponent(status)}`;
        }
    </script>
{% endblock %}
